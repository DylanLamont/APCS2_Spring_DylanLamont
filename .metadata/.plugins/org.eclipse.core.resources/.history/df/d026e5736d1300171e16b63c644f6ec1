package textExcel;
import java.util.*;

public class FormulaCell extends RealCell{

	private String cellText;
	@Override
	public String abbreviatedCellText() {
		
		/*
		if (cellText.length() > 10){
			return cellText.substring(0,10);  //shorten's formula to being a 10 spaced value

		}else {
			String returnStr = cellText;
			while (returnStr.length() < 10){		// adds spaces in order to fill 10 chars, also if length is 10, falls to printing value
				returnStr += " ";
			}
			return returnStr;
		}*/
	}

	@Override
	public String fullCellText() {
		return super.fullCellText();				//returns true value of formula cell using super method
	}
	
	public FormulaCell (String enteredForm){
		super(enteredForm);							//constructor to fill super's String field (accesses by fullCellText)
		for (int i = 0; i < this.fullCellText().length(); i++){
			if (!(fullCellText().charAt(i) == ' ')){
				cellText += fullCellText().charAt(i);
			}
		}
	}

	public String getType(){
		return "FormulaCell";						//returns type of cell
	}
	
	public double getDoubleValue (){
		ArrayList<String> operators = new ArrayList<String>();
		ArrayList<Double> operands = new ArrayList<Double>();
		ArrayList<String> locations = new ArrayList<String>();
		for (int i = 0; i < cellText.length(); i++){
			if (cellText.charAt(i) != '+' ||cellText.charAt(i) != '-'||cellText.charAt(i) != '*' ||cellText.charAt(i) != '/'){
				operators.add(cellText.charAt(i) + "");
			}else if ((cellText.charAt(i) >= 65 && cellText.charAt(i) <= 90) || (cellText.charAt(i) >= 97 && cellText.charAt(i) <= 122)){
				if ((Integer.parseInt(cellText.charAt(i +1) + "") > 2)){
					locations.add(cellText.substring(i, i + 2));
				}else if (cellText.charAt(i + 2) != '+' ||cellText.charAt(i + 2) != '-'||cellText.charAt(i + 2) != '*' ||cellText.charAt(i + 2) != '/'){
					locations.add(cellText.substring(i, i + 2));
				}else{
					locations.add(cellText.substring(i, i + 3));
				}
			}else {
				String numberVal = cellText.charAt(i) + "";
				int lengthOfNum = 0;
				while (!(cellText.charAt(i + lengthOfNum) != '+' ||cellText.charAt(i + lengthOfNum) != '-'||cellText.charAt(i + lengthOfNum) != '*' ||cellText.charAt(i + lengthOfNum) != '/')){
					numberVal = cellText.substring(i + lengthOfNum);
					lengthOfNum++;
				}
				operands.add(Double.parseDouble(numberVal));
			}
		}
		double returnVal = operands.get(0);
		for (int i = 0; i < operators.size(); i++){
			if (operators.get(i).equalsIgnoreCase("+")){
				returnVal += operands.get(i+1);
			} else if (operators.get(i).equalsIgnoreCase("-")){
				returnVal -= operands.get(i+1);
			} else if (operators.get(i).equalsIgnoreCase("*")){
				returnVal *= operands.get(i+1);
			} else if (operators.get(i).equalsIgnoreCase("/")){
				returnVal /= operands.get(i+1);
			}
		}
		return returnVal;
	}
}
